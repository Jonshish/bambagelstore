{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productTopRatedReducer } from './reducers/productReducer.js';\nimport { cartReducer } from './reducers/cartReducers.js';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers.js';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst pickUpTimeFromStorage = localStorage.getItem('pickUpTime') ? JSON.parse(localStorage.getItem('pickUpTime')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    pickUpTime: pickUpTimeFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["W:/Javascript_Projects/bambagel_project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productReviewCreateReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productReviewCreate","productDelete","productCreate","productUpdate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","pickUpTimeFromStorage","initialState","cartItems","pickUpTime","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,0BAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,sBAPF,QAQO,8BARP;AASA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,4BARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,mBANF,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC9B0B,EAAAA,WAAW,EAAEtB,kBADiB;AAE9BuB,EAAAA,cAAc,EAAEtB,qBAFc;AAG9BuB,EAAAA,mBAAmB,EAAEtB,0BAHS;AAI9BuB,EAAAA,aAAa,EAAEtB,oBAJe;AAK9BuB,EAAAA,aAAa,EAAEtB,oBALe;AAM9BuB,EAAAA,aAAa,EAAEtB,oBANe;AAO9BuB,EAAAA,eAAe,EAAEtB,sBAPa;AAQ9BuB,EAAAA,IAAI,EAAEtB,WARwB;AAS9BuB,EAAAA,SAAS,EAAEtB,gBATmB;AAU9BuB,EAAAA,YAAY,EAAEtB,mBAVgB;AAW9BuB,EAAAA,WAAW,EAAEtB,kBAXiB;AAY9BuB,EAAAA,iBAAiB,EAAEtB,wBAZW;AAa9BuB,EAAAA,QAAQ,EAAEtB,eAboB;AAc9BuB,EAAAA,UAAU,EAAEtB,iBAdkB;AAe9BuB,EAAAA,UAAU,EAAEtB,iBAfkB;AAgB9BuB,EAAAA,WAAW,EAAEtB,kBAhBiB;AAiB9BuB,EAAAA,YAAY,EAAEtB,mBAjBgB;AAkB9BuB,EAAAA,QAAQ,EAAEtB,eAlBoB;AAmB9BuB,EAAAA,WAAW,EAAEtB,kBAnBiB;AAoB9BuB,EAAAA,SAAS,EAAEtB,gBApBmB;AAqB9BuB,EAAAA,YAAY,EAAEtB;AArBgB,CAAD,CAA/B;AAwBA,MAAMuB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,qBAAqB,GAAGL,YAAY,CAACC,OAAb,CAAqB,YAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAD0B,GAE1B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,UAAU,EAAEH;AAFR,GADa;AAKnBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACvB0B,OADuB,EAEvB6B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productReviewCreateReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducer.js'\r\nimport { cartReducer } from './reducers/cartReducers.js'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers.js'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst pickUpTimeFromStorage = localStorage.getItem('pickUpTime')\r\n  ? JSON.parse(localStorage.getItem('pickUpTime'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    pickUpTime: pickUpTimeFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}