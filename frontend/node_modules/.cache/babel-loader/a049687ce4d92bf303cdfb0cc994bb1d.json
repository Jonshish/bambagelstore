{"ast":null,"code":"var _jsxFileName = \"W:\\\\Javascript_Projects\\\\bambagelstore\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePickUpTime } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    pickUpTime\n  } = cart; // might have to create two seperate functions for pickUpTime and shippingAddress\n  // if it doesn't work combine the two forms, create a note on frontend that says to fill in arbituray values inside \"Shipping Address\"\n\n  const [month, setMonth] = useState(pickUpTime.month);\n  const [day, setDay] = useState(pickUpTime.day);\n  const [year, setYear] = useState(pickUpTime.year);\n  const [time, setTime] = useState(pickUpTime.time);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePickUpTime({\n      month,\n      day,\n      year,\n      time\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick Up Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"month\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter month\",\n          value: month,\n          required: true,\n          onChange: e => setMonth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"day\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter day\",\n          value: day,\n          required: true,\n          onChange: e => setDay(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"year\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter year\",\n          value: year,\n          required: true,\n          onChange: e => setYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"time\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter time\",\n          value: time,\n          required: true,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShippingScreen, \"9lCXcWCYcMTIlIUnFi3ovPoznDQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["W:/Javascript_Projects/bambagelstore/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","savePickUpTime","ShippingScreen","history","cart","state","pickUpTime","month","setMonth","day","setDay","year","setYear","time","setTime","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePickUpTime } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { pickUpTime } = cart\n  // might have to create two seperate functions for pickUpTime and shippingAddress\n  // if it doesn't work combine the two forms, create a note on frontend that says to fill in arbituray values inside \"Shipping Address\"\n\n  const [month, setMonth] = useState(pickUpTime.month)\n  const [day, setDay] = useState(pickUpTime.day)\n  const [year, setYear] = useState(pickUpTime.year)\n  const [time, setTime] = useState(pickUpTime.time)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePickUpTime({ month, day, year, time }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Pick Up Time</h1>\n      <Form onSubmit={submitHandler} className=\"mb-5\">\n        <Form.Group controlId=\"month\">\n          <Form.Label>Month</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter month\"\n            value={month}\n            required\n            onChange={(e) => setMonth(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"day\">\n          <Form.Label>Day</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter day\"\n            value={day}\n            required\n            onChange={(e) => setDay(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"year\">\n          <Form.Label>Year</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter year\"\n            value={year}\n            required\n            onChange={(e) => setYear(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"time\">\n          <Form.Label>Time</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter time\"\n            value={time}\n            required\n            onChange={(e) => setTime(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}