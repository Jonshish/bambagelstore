{"ast":null,"code":"import _slicedToArray from\"W:/Javascript_Projects/bambagel_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePickUpTime}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var pickUpTime=cart.pickUpTime;// might have to create two seperate functions for pickUpTime and shippingAddress\n// if it doesn't work combine the two forms, create a note on frontend that says to fill in arbituray values inside \"Shipping Address\"\nvar _useState=useState(pickUpTime.month),_useState2=_slicedToArray(_useState,2),month=_useState2[0],setMonth=_useState2[1];var _useState3=useState(pickUpTime.day),_useState4=_slicedToArray(_useState3,2),day=_useState4[0],setDay=_useState4[1];var _useState5=useState(pickUpTime.year),_useState6=_slicedToArray(_useState5,2),year=_useState6[0],setYear=_useState6[1];var _useState7=useState(pickUpTime.time),_useState8=_slicedToArray(_useState7,2),time=_useState8[0],setTime=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePickUpTime({month:month,day:day,year:year,time:time}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Pick Up Time\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,className:\"mb-5\",children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"month\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Month\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter month\",value:month,required:true,onChange:function onChange(e){return setMonth(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"day\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Day\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter day\",value:day,required:true,onChange:function onChange(e){return setDay(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"year\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Year\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter year\",value:year,required:true,onChange:function onChange(e){return setYear(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"time\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Time\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter time\",value:time,required:true,onChange:function onChange(e){return setTime(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["W:/Javascript_Projects/bambagel_project/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","savePickUpTime","ShippingScreen","history","cart","state","pickUpTime","month","setMonth","day","setDay","year","setYear","time","setTime","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePickUpTime } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { pickUpTime } = cart\r\n  // might have to create two seperate functions for pickUpTime and shippingAddress\r\n  // if it doesn't work combine the two forms, create a note on frontend that says to fill in arbituray values inside \"Shipping Address\"\r\n\r\n  const [month, setMonth] = useState(pickUpTime.month)\r\n  const [day, setDay] = useState(pickUpTime.day)\r\n  const [year, setYear] = useState(pickUpTime.year)\r\n  const [time, setTime] = useState(pickUpTime.time)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePickUpTime({ month, day, year, time }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Pick Up Time</h1>\r\n      <Form onSubmit={submitHandler} className=\"mb-5\">\r\n        <Form.Group controlId=\"month\">\r\n          <Form.Label>Month</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter month\"\r\n            value={month}\r\n            required\r\n            onChange={(e) => setMonth(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"day\">\r\n          <Form.Label>Day</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter day\"\r\n            value={day}\r\n            required\r\n            onChange={(e) => setDay(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"year\">\r\n          <Form.Label>Year</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter year\"\r\n            value={year}\r\n            required\r\n            onChange={(e) => setYear(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"time\">\r\n          <Form.Label>Time</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter time\"\r\n            value={time}\r\n            required\r\n            onChange={(e) => setTime(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}